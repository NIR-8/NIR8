<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="color-scheme" content="light only">
    <title>NIR8 Calculators</title>

    <!-- MathJax configuration -->
    <script>
        MathJax = {
            loader: { load: ['input/tex', 'output/chtml'] },
            tex: {
                inlineMath: [['$', '$'], ['\\(', '\\)']],
                packages: {'[+]': ['base', 'ams']},
                processEscapes: true
            },
            chtml: { scale: 0.9, mtextInheritFont: true },
            startup: {
                typeset: false,
                pageReady() {
                    MathJax.startup.defaultPageReady();
                    document.dispatchEvent(new Event('MathJaxReady'));
                }
            }
        };
    </script>

    <!-- Load local Decimal.js with fallback -->
    <script src="decimal.min.js" onerror="loadDecimalFallback()"></script>
    <script>
        function loadDecimalFallback() {
            console.warn('Local Decimal.js failed to load. Attempting to load from CDN...');
            const script = document.createElement('script');
            script.src = 'https://cdnjs.cloudflare.com/ajax/libs/decimal.js/10.4.3/decimal.min.js';
            script.async = true;
            script.onerror = () => {
                console.error('Failed to load Decimal.js from CDN. Some calculations may not work correctly.');
                alert('Unable to load Decimal.js. Please check your network connection or ensure the local file is available.');
            };
            script.onload = () => {
                console.log('Decimal.js loaded successfully from CDN.');
                initializeDecimal();
            };
            document.head.appendChild(script);
        }

        function initializeDecimal() {
            if (typeof Decimal !== 'undefined') {
                Decimal.set({ precision: 20, toExpNeg: -9, toExpPos: 20 });
            }
        }

        if (typeof Decimal !== 'undefined') {
            initializeDecimal();
        }
    </script>

    <!-- Load local MathJax with fallback -->
    <script src="assets/mathjax/es5/tex-mml-chtml.js" onerror="loadMathJaxFallback()" async></script>
    <script>
        function loadMathJaxFallback(attempt = 1, maxAttempts = 2) {
            console.warn(`Local MathJax failed to load. Attempting to load from CDN (Attempt ${attempt}/${maxAttempts})...`);
            const script = document.createElement('script');
            script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js';
            script.async = true;
            script.onerror = () => {
                if (attempt < maxAttempts) {
                    console.warn(`MathJax CDN attempt ${attempt} failed. Retrying...`);
                    loadMathJaxFallback(attempt + 1, maxAttempts);
                } else {
                    console.error('Failed to load MathJax from CDN after multiple attempts.');
                    alert('Unable to load MathJax. Equations will be displayed as plain text.');
                    document.getElementById('mathjax-loading').textContent = 'Failed to load equations.';
                    document.getElementById('mathjax-loading').style.display = 'block';
                    document.dispatchEvent(new Event('MathJaxReady'));
                }
            };
            script.onload = () => {
                console.log('MathJax loaded successfully from CDN.');
                document.getElementById('mathjax-loading').style.display = 'none';
                MathJax.startup.getComponents();
            };
            document.head.appendChild(script);
        }
    </script>

   
    <style>
        
        /* Override MathJax .CtxtMenu_Info to fix border-radius and box-shadow order */
        .CtxtMenu_Info {
            -webkit-border-radius: 15px;
            -moz-border-radius: 15px;
            border-radius: 15px;
            -webkit-box-shadow: 0px 10px 20px #808080;
            -moz-box-shadow: 0px 10px 20px #808080;
            box-shadow: 0px 10px 20px #808080;
        }

        .menu-bar {
            width: 100%;
            background: rgba(0, 0, 0, .8);
            color: #fff;
            display: flex;
            justify-content: center;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 100;
            padding: 10px 0;
        }
        .menu-container {
            display: flex;
            max-width: 1000px;
            width: 100%;
            padding: 0 20px;
            align-items: center;
            gap: 20px;
        }
        .menu-item {
            color: #fff;
            text-decoration: none;
            padding: 8px 16px;
            margin: 0 5px;
            border-radius: 5px;
            transition: background .3s ease;
            cursor: pointer;
            white-space: nowrap;
        }
        .menu-item:hover {
            background: rgba(255, 255, 255, .2);
        }
        .menu-item.active {
            background: #28a745;
        }
        .menu-qty-tracker {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-left: auto;
        }
        .menu-qty-tracker.hidden {
            display: none;
        }
        .menu-qty-group {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }
        .menu-qty-input, .lot-select {
            width: 100px;
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 3px;
            text-align: center;
            background: #fff;
            color: #000;
            font-size: 14px;
        }
        .menu-qty-input:focus, .lot-select:focus {
            outline: 0;
            border-color: #28a745;
        }
        .lot-select option {
            background: #fff;
            color: #000;
        }
        .menu-qty-label {
            font-size: 12px;
            color: #ccc;
            margin-bottom: 3px;
        }
        .menu-qty-value {
            font-size: 14px;
            font-weight: 600;
            color: #fff;
        }
        .menu-qty-warning {
            color: #ff6b6b;
            font-size: 11px;
            margin-top: 3px;
            display: none;
        }
        .menu-qty-warning.active {
            display: block;
            background: #ff6b6b;
            color: #fff;
            padding: 3px 8px;
            border-radius: 3px;
            font-weight: 600;
        }
        body {
            font-family: Poppins, sans-serif;
            background: linear-gradient(to right, #4facfe, #00f2fe);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            flex-direction: column;
            padding: 20px;
            text-align: center;
            margin: 0;
            position: relative;
            padding-bottom: 60px;
            padding-top: 80px;
        }
        .calculator-container {
            display: none;
            background: #fff;
            padding: 25px;
            width: 90%;
            max-width: 400px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, .2);
            margin-bottom: 20px;
            position: relative;
        }
        #acbCalculator {
            max-width: 900px;
        }
        .calculator-container.active {
            display: block;
        }
        .input-group {
            margin-top: 10px;
            text-align: left;
        }
        label {
            font-weight: 600;
            display: block;
            color: #444;
        }
        input, select {
            width: calc(100% - 20px);
            padding: 10px;
            margin: 5px 0;
            border: 2px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            text-align: center;
        }
        input:focus, select:focus {
            border-color: #007bff;
            outline: 0;
            box-shadow: 0 0 5px rgba(0, 123, 255, .5);
        }
        .button-row {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-top: 15px;
        }
        button {
            background: #28a745;
            color: #fff;
            padding: 12px;
            flex: 1;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            user-select: none;
        }
        button:hover {
            background: #218838;
        }
        .hidden {
            display: none !important;
        }
        .hidden[aria-hidden=true] {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            border: 0;
        }
        .calculation-steps {
            margin-top: 20px;
            padding: 15px;
            width: 90%;
            max-width: 900px;
            background: #fff;
            border-radius: 0;
            box-shadow: 0 4px 10px rgba(0, 0, 0, .1);
            color: #555;
            text-align: left;
            position: relative;
            padding-top: 20px;
            will-change: transform;
        }
        .calculation-entry {
            margin-bottom: 15px;
            border: 1px solid #000;
            padding: 15px;
            position: relative;
            width: 100%;
            min-height: 200px;
            font-size: 14pt;
            border-radius: 0;
            box-sizing: border-box;
            contain: content;
            overflow: hidden;
        }
        .calculation-entry::before {
            content: "Assay Based Calculation";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            background: #f0f0f0;
            padding: 5mm;
            text-align: center;
            font-size: 16pt;
            font-weight: 600;
            border-bottom: 1px solid #000;
            box-sizing: border-box;
        }
        .calculation-entry::after {
            content: "Remarks: ______________________________________________________________";
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            background: #f0f0f0;
            padding: 5mm;
            font-size: 14pt;
            border-top: 1px solid #000;
            box-sizing: border-box;
        }
        .calculation-entry .lot-label::before {
            content: "LOT: ";
            position: absolute;
            top: 24mm;
            left: 15mm;
            font-size: 14pt;
        }
        .reference-values {
            position: absolute;
            top: 24mm;
            right: 15mm;
            font-size: 10pt;
            color: #000;
            z-index: 10;
        }
        .calculation-content {
            margin-top: 30mm;
            margin-bottom: 30mm;
            padding: 0 15mm;
            overflow: hidden;
            font-size: 14pt;
        }
        .delete-button {
            position: absolute;
            top: 10px;
            left: 10px;
            background: transparent;
            border: none;
            cursor: pointer;
            font-size: 20px;
            color: red;
            padding: 0;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .delete-button:hover {
            color: #c00;
        }
        .page-number {
            position: absolute;
            bottom: 1mm;
            right: 4mm;
            font-size: 8pt;
            color: #000;
            font-weight: 700;
            z-index: 5;
        }
        .loading-indicator {
            display: none;
            position: absolute;
            top: 10px;
            left: 10px;
            font-size: 12px;
            color: #666;
            font-style: italic;
        }
        .input-row {
            display: flex;
            gap: 10px;
            justify-content: space-between;
        }
        .input-row .input-group {
            flex: 1;
        }
        .progress-container {
            width: 100%;
            background: #ddd;
            border-radius: 5px;
            margin-top: 15px;
            height: 10px;
            overflow: hidden;
        }
        .progress-bar {
            width: 0%;
            height: 100%;
            background: #28a745;
            transition: width .3s ease-in-out;
        }
        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        input[type=number] {
            -moz-appearance: textfield;
        }
        .acb-table {
            border-collapse: collapse;
            width: 100%;
            margin: 10px 0;
            font-family: Poppins, sans-serif;
            table-layout: auto;
        }
        .acb-td, .acb-th {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
            font-size: 14px;
            min-width: 60px;
            word-wrap: break-word;
            white-space: normal;
        }
        .acb-th {
            background-color: #f2f2f2;
            color: #444;
            font-weight: 600;
        }
        .acb-input {
            width: calc(100% - 16px);
            padding: 6px;
            margin: 2px 0;
            border: 2px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
            text-align: center;
            background: transparent;
            transition: border-color .3s ease;
        }
        .acb-input:focus {
            border-color: #00d403;
            outline: 0;
            box-shadow: 0 0 5px rgba(0, 123, 255, .5);
        }
        .acb-input.edited {
            border-color: #ffdc00ba;
            background-color: #fff;
        }
        .acb-input[readonly] {
            background: #f5f5f5;
            cursor: not-allowed;
        }
        .acb-span {
            display: block;
            padding: 6px;
            font-size: 14px;
        }
        .acb-prefilled {
            color: #1a1a1a;
        }
        .acb-manual-input, .acb-output {
            color: #00f;
        }
        .acb-highlight-row {
            background-color: #e6f3ff;
        }
        .acb-notice {
            text-align: center;
            background-color: #ffeb3b;
            padding: 8px 16px;
            border-radius: 5px;
            font-family: Poppins, sans-serif;
            font-size: 14px;
            display: none;
            margin: 10px auto;
            width: fit-content;
        }
        .acb-toggle-btn {
            background: #28a745;
            color: #fff;
            padding: 8px 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background .3s ease;
        }
        .acb-toggle-btn:hover {
            background: #218838;
        }
        .acb-toggle-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
        .print-btn {
            background: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-bottom: 10px;
            display: none;
        }
        .print-btn:hover {
            background: #0056b3;
        }
        .calculation-steps:not(.hidden) .print-btn {
            display: block;
        }
        .error-message {
            color: #ff6b6b;
            font-size: 12px;
            margin-top: 5px;
            text-align: center;
        }
        .reset-acb-btn {
            position: absolute;
            bottom: 10px;
            right: 10px;
            background: transparent;
            border: none;
            cursor: pointer;
            font-size: 20px;
            color: #ff6b6b;
            padding: 5px;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: all 0.3s ease;
        }
        .reset-acb-btn:hover {
            background: rgba(255, 107, 107, 0.1);
            transform: rotate(90deg);
        }
        .info-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, .4);
        }
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, .1);
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: 700;
            cursor: pointer;
            user-select: none;
        }
        .close:hover, .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }
        .info-section {
            margin-bottom: 15px;
        }
        .info-section h3 {
            margin-top: 0;
            color: #333;
            border-bottom: 1px solid #ddd;
            padding-bottom: 5px;
        }
        .info-item {
            margin-bottom: 8px;
        }
        .info-key {
            font-weight: 700;
            color: #28a745;
        }
        .info-footer {
            text-align: center;
            margin-top: 20px;
            font-size: 12px;
            color: #777;
        }
        #mathjax-loading {
            display: none;
            position: fixed;
            top: 10px;
            right: 10px;
            color: #666;
            font-size: 14px;
            font-style: italic;
            z-index: 1000;
        }
        footer {
            width: 100%;
            background: rgba(0, 0, 0, .8);
            color: #fff;
            text-align: center;
            padding: 10px 0;
            position: fixed;
            bottom: 0;
            left: 0;
            font-size: 14px;
            z-index: 5;
        }
        .info-btn {
            background: transparent;
            border: none;
            color: #ff9;
            cursor: pointer;
            font-weight: 700;
            padding: 0 5px;
            text-decoration: underline;
        }
        .info-btn:hover {
            color: #fff;
        }
        #remainingQty {
            cursor: pointer;
            transition: all 0.2s ease;
        }
        #remainingQty:hover {
            color: #4facfe;
            text-decoration: underline;
        }
        
        /* Active lot highlighting */
        .active-lot {
            background-color: #ffeeba !important;
            border: 2px solid #ffc107 !important;
        }
        
        /* Next lot button */
        .next-lot-btn {
            background: #007bff;
            color: #fff;
            padding: 8px 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            margin-top: 10px;
            display: none;
        }
        .next-lot-btn:hover {
            background: #0056b3;
        }
        
        /* Std Qty Modal */
        .std-qty-modal {
            display: flex;
            position: fixed;
            z-index: 10000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            align-items: center;
            justify-content: center;
        }
        .std-qty-modal-content {
            background-color: #fefefe;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 400px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            text-align: center;
        }
        .std-qty-modal input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 2px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            text-align: center;
        }
        .std-qty-modal button {
            background: #28a745;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
        }
        .std-qty-modal button:hover {
            background: #218838;
        }

        @media (max-width: 768px) {
            .calculation-entry {
                min-height: 180px;
                font-size: 12pt;
            }
            .calculation-entry::before {
                font-size: 14pt;
                padding: 4mm;
            }
            .calculation-entry::after {
                font-size: 12pt;
                padding: 4mm;
                bottom: 8mm;
            }
            .calculation-entry .lot-label::before, .reference-values {
                top: 24mm;
                font-size: 10pt;
            }
            .calculation-content {
                margin-top: 26mm;
                margin-bottom: 26mm;
                font-size: 12pt;
                padding: 0 10mm;
            }
            .page-number {
                font-size: 10pt;
                bottom: 2mm;
                right: 10mm;
            }
            .acb-td, .acb-th {
                font-size: 12px;
                padding: 6px;
                min-width: 50px;
            }
            .acb-input, .acb-span {
                font-size: 12px;
                padding: 4px;
            }
            .menu-container {
                flex-wrap: wrap;
                gap: 10px;
                padding: 10px;
            }
            .menu-qty-tracker {
                order: 3;
                width: 100%;
                justify-content: center;
                margin-left: 0;
            }
        }
        @media (max-width: 480px) {
            .calculation-entry {
                min-height: 180px;
                font-size: 10pt;
            }
            .calculation-entry::before {
                font-size: 12pt;
                padding: 3mm;
            }
            .calculation-entry::after {
                font-size: 10pt;
                padding: 3mm;
                bottom: 6mm;
            }
            .calculation-entry .lot-label::before {
                content: "LOT: ";
                position: absolute;
                top: 20mm;
                left: 8mm;
                font-size: 10pt;
                width: 100%;
                text-align: left;
                z-index: 10;
            }
            .reference-values {
                position: absolute;
                top: 25mm;
                left: 8mm;
                right: auto;
                font-size: 10pt;
                text-align: left;
                width: 100%;
                z-index: 11;
            }
            .calculation-content {
                margin-top: 28mm;
                margin-bottom: 22mm;
                font-size: 10pt;
                padding: 0 8mm;
            }
            .page-number {
                font-size: 8pt;
                bottom: 1mm;
                right: 8mm;
            }
            .acb-td, .acb-th {
                font-size: 10px;
                padding: 4px;
                min-width: 40px;
            }
            .acb-input, .acb-span {
                font-size: 10px;
                padding: 3px;
            }
            .calculator-container {
                width: 100%;
                padding: 15px;
            }
            .acb-input, input {
                font-size: 14px;
            }
            .acb-toggle-btn, button {
                font-size: 14px;
                padding: 10px;
            }
            .menu-item {
                padding: 6px 10px;
                font-size: 14px;
            }
            .menu-qty-input, .lot-select {
                width: 80px;
            }
        }


      /* GLOBAL RESET FOR BOX-SIZING */
*, *::before, *::after {
    box-sizing: border-box;
}

@media print {
    @page {
        size: A4 landscape;
        margin: 8mm;
    }

    body {
        background: transparent;
        padding: 0;
        margin: 0;
    }

    /* Hide UI elements not needed for printing */
    #mathjax-loading, .acb-notice, .acb-toggle-btn, .calculator-container, .delete-button, .info-btn, 
    .menu-bar, .print-btn, .progress-container, footer, .reset-acb-btn {
        display: none !important;
    }

    .calculation-steps {
        border-radius: 0 !important;
        box-shadow: none !important;
        display: block !important;
        width: 100%;
        max-width: none;
        margin: 0;
        padding: 0;
        background: transparent;
    }

    .calculation-entry {
        width: 280mm !important;
        height: 190mm !important;
        margin: 0 auto;
        padding: 0;
        border: 1px solid #000;
        font-size: 12pt;
        position: relative;
        background: #fff;
        overflow: hidden;
        page-break-after: always;
        /* box-sizing is already set globally */
    }

    .calculation-entry::before {
        content: "Assay Based Calculation";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        background: #f0f0f0;
        padding: 5mm;
        text-align: center;
        font-size: 16pt;
        font-weight: 600;
        border-bottom: 1px solid #000;
    }

    .calculation-entry::after {
        content: "Remarks: ______________________________________________________________";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        background: #f0f0f0;
        padding: 5mm;
        font-size: 14pt;
        border-top: 1px solid #000;
    }

    .reference-values {
        position: absolute;
        top: 20mm;
        right: 10mm;
        font-size: 10pt;
        color: #000;
        background: #fff;
        padding: 2px 5px;
        z-index: 10;
    }

    .calculation-entry .lot-label::before {
        content: "LOT: ";
        position: absolute;
        top: 24mm;
        left: 15mm;
        font-size: 14pt;
    }

    .calculation-content {
        margin-top: 30mm;
        margin-bottom: 30mm;
        padding: 0 15mm;
        font-size: 14pt;
        overflow: hidden;
        text-align: left;
    }

    .page-number {
        position: absolute;
        bottom: 5mm;
        right: 5mm;
        font-size: 8pt;
        color: #000;
        font-weight: 700;
    }

    #stepsContainer {
        display: flex;
        flex-direction: column-reverse;
    }
}

    </style>
</head>
<body>
    <div id="mathjax-loading">Loading equations...</div>
    <noscript>
        <div style="background:#ff6b6b;color:#fff;padding:10px;text-align:center">
            JavaScript is required to use this calculator. Please enable JavaScript in your browser settings.
        </div>
    </noscript>
    
    <!-- Standard Quantity Modal -->
    <div id="stdQtyModal" class="std-qty-modal" style="display: none;">
        <div class="std-qty-modal-content">
            <h2>Enter Standard Quantity</h2>
            <p>Please enter the standard quantity for all lots:</p>
            <input type="number" id="stdQtyModalInput" step="0.001" min="0.001" placeholder="Enter Std Qty">
            <button id="stdQtySubmitBtn">Submit</button>
        </div>
    </div>
    
    <div class="menu-bar">
        <div class="menu-container">
            <div class="menu-item active" id="menuFormula" onclick='showCalculator("formula")'>Formula Calculator</div>
            <div class="menu-item" id="menuAcb" onclick='showCalculator("acb")'>(A+C)-B Calculator</div>
<div class="menu-qty-tracker">
                <div class="menu-qty-group">
                    <label for="stdQty" class="menu-qty-label">Std Qty (kg)</label>
                    <input type="number" id="stdQty" class="menu-qty-input" step="0.001" min="0" placeholder="Enter std qty" onchange="updateQuantityTracker()">
                </div>
                <div class="menu-qty-group">
                   <label class="menu-qty-label">Dispensed</label>
                    <div id="dispensedQty" class="menu-qty-value">0.000</div>
                </div>
                <div class="menu-qty-group">
                    <label for="remainingQty" class="menu-qty-label">Remaining</label>
                    <div id="remainingQty" class="menu-qty-value">0.000</div>
                    <div id="quantityWarning" class="menu-qty-warning">Qty mismatch!</div>
                </div>
                <div class="menu-qty-group" id="lotSelectGroup" style="display: none;">
                    <label for="lotSelect" class="menu-qty-label">Select Lot</label>
                    <select id="lotSelect" class="menu-qty-input">
                        <option value="" disabled selected>Select Lot</option>
                        <option value="1">I</option>
                        <option value="2">II</option>
                        <option value="3">III</option>
                        <option value="4">IV</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div id="formulaCalculator" class="calculator-container active">
        <h2>Formula Calculator</h2>
        <div class="input-group">
            <label for="Q">Quantity (Q):</label>
            <input type="number" id="Q" max="9999999" min="0.001" required placeholder="Enter quantity" oninput="handleInput(event)">
        </div>
        <div class="input-row">
            <div class="input-group">
                <label for="water">Water Content (W):</label>
                <input type="number" id="water" step="0.01" min="0.01" max="99.99" required placeholder="Enter water content" oninput="handleInput(event)">
            </div>
            <div class="input-group">
                <label for="assay">Assay Content (A):</label>
                <input type="number" id="assay" step="0.01" min="0.01" max="100.00" required placeholder="Enter assay content" oninput="handleInput(event)">
            </div>
        </div>
        <div class="progress-container">
            <div class="progress-bar" id="progressBar"></div>
        </div>
        <div class="button-row">
            <button type="button" onclick='calculate("F1")' aria-label="Calculate F1">Calculate F1</button>
            <button type="button" onclick='calculate("F2")' aria-label="Calculate F2">Calculate F2</button>
            <button type="button" onclick='calculate("F3")' aria-label="Calculate F3">Calculate F3</button>
        </div>
    </div>
    <div id="acbCalculator" class="calculator-container">
        <div class="header-row">
            <h2>(A+C)-B Calculator</h2>
            <button type="button" class="acb-toggle-btn" id="toggleEditBtn" onclick="toggleEdit()" aria-label="Toggle edit standard quantities">Enable Editing Std qty</button>
        </div>
        <table class="acb-table">
            <caption class="hidden">(A+C)-B Calculator Table</caption>
            <thead>
                <tr>
                    <th class="acb-th" scope="col"></th>
                    <th class="acb-th" scope="col">Lot-I</th>
                    <th class="acb-th" scope="col">Lot-II</th>
                    <th class="acb-th" scope="col">Lot-III</th>
                    <th class="acb-th" scope="col">Lot-IV</th>
                    <th class="acb-th" scope="col">TOTAL (kg)</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="acb-td">Std. Qty (A)<br>kg</td>
                    <td class="acb-td">
                        <label for="lot1-a" class="hidden">Lot 1 Standard Quantity A</label>
                        <input type="number" step="0.001" id="lot1-a" value="0.000" class="acb-input acb-prefilled" readonly placeholder="Std Qty A">
                    </td>
                    <td class="acb-td">
                        <label for="lot2-a" class="hidden">Lot 2 Standard Quantity A</label>
                        <input type="number" step="0.001" id="lot2-a" value="0.000" class="acb-input acb-prefilled" readonly placeholder="Std Qty A">
                    </td>
                    <td class="acb-td">
                        <label for="lot3-a" class="hidden">Lot 3 Standard Quantity A</label>
                        <input type="number" step="0.001" id="lot3-a" value="0.000" class="acb-input acb-prefilled" readonly placeholder="Std Qty A">
                    </td>
                    <td class="acb-td">
                        <label for="lot4-a" class="hidden">Lot 4 Standard Quantity A</label>
                        <input type="number" step="0.001" id="lot4-a" value="0.000" class="acb-input acb-prefilled" readonly placeholder="Std Qty A">
                    </td>
                    <td class="acb-td">
                        <span id="total-a" class="acb-span acb-prefilled">0.000</span>
                    </td>
                </tr>
                <tr>
                    <td class="acb-td">Issued Qty (B)<br>kg</td>
                    <td class="acb-td">
                        <label for="lot1-b" class="hidden">Lot 1 Issued Quantity B</label>
                        <input type="number" step="0.001" id="lot1-b" value="0.000" class="acb-input acb-manual-input" placeholder="Issued Qty B" oninput="updateAcbTotals()">
                    </td>
                    <td class="acb-td">
                        <label for="lot2-b" class="hidden">Lot 2 Issued Quantity B</label>
                        <input type="number" step="0.001" id="lot2-b" value="0.000" class="acb-input acb-manual-input" placeholder="Issued Qty B" oninput="updateAcbTotals()">
                    </td>
                    <td class="acb-td">
                        <label for="lot3-b" class="hidden">Lot 3 Issued Quantity B</label>
                        <input type="number" step="0.001" id="lot3-b" value="0.000" class="acb-input acb-manual-input" placeholder="Issued Qty B" oninput="updateAcbTotals()">
                    </td>
                    <td class="acb-td">
                        <label for="lot4-b" class="hidden">Lot 4 Issued Quantity B</label>
                        <input type="number" step="0.001" id="lot4-b" value="0.000" class="acb-input acb-manual-input" placeholder="Issued Qty B" oninput="updateAcbTotals()">
                    </td>
                    <td class="acb-td">
                        <span id="total-b" class="acb-span acb-output">0.000</span>
                    </td>
                </tr>
                <tr>
                    <td class="acb-td">(A+C)-B<br>kg</td>
                    <td class="acb-td">
                        <span id="lot1-c" class="acb-span acb-output">0.000</span>
                    </td>
                    <td class="acb-td">
                        <span id="lot2-c" class="acb-span acb-output">0.000</span>
                    </td>
                    <td class="acb-td">
                        <span id="lot3-c" class="acb-span acb-output">0.000</span>
                    </td>
                    <td class="acb-td">
                        <span id="lot4-c" class="acb-span acb-output">0.000</span>
                    </td>
                    <td class="acb-td">
                        <span id="total-c" class="acb-span acb-output">0.000</span>
                    </td>
                </tr>
            </tbody>
        </table>
        <div id="acbNotice" class="acb-notice" role="alert">
            Standard quantities are now editable. Changes will affect all calculations.
        </div>
        <button type="button" class="next-lot-btn" id="nextLotBtn">Proceed to Next Lot</button>
        <button type="button" class="reset-acb-btn" onclick="resetAcbCalculator()" aria-label="Reset ACB Calculator">↺</button>
    </div>
    <div id="stepsContainer" class="calculation-steps hidden" aria-live="polite">
        <button type="button" class="print-btn" onclick="window.print()">Print Calculations</button>
        <div id="stepsList"></div>
    </div>
    <div id="infoModal" class="info-modal" role="dialog" aria-modal="true" aria-labelledby="infoModalTitle">
        <div class="modal-content">
            <span class="close" onclick="closeInfoModal()" aria-label="Close modal">&times;</span>
            <h2 id="infoModalTitle">About NIR8 Calculators</h2>
            <div class="info-section">
                <h3>Formula Calculator</h3>
                <div class="info-item"><span class="info-key">F1:</span> Q × (100 - W) / 100</div>
                <div class="info-item"><span class="info-key">F2:</span> Q × (100 - A) / 100</div>
                <div class="info-item"><span class="info-key">F3:</span> Q × (100 - W) / (100 - A)</div>
            </div>
            <div class="info-section">
                <h3>(A+C)-B Calculator</h3>
                <div class="info-item"><span class="info-key">A:</span> Standard Quantity (kg)</div>
                <div class="info-item"><span class="info-key">B:</span> Issued Quantity (kg)</div>
                <div class="info-item"><span class="info-key">C:</span> Correction Factor (kg)</div>
                <div class="info-item"><span class="info-key">(A+C)-B:</span> Remaining Quantity (kg)</div>
            </div>
            <div class="info-footer">
                <p>Developed for NIR8 Pharmaceutical Calculations</p>
                <p>Version 1.0.0 | &copy; 2023</p>
            </div>
        </div>
    </div>
    <footer>
        <button class="info-btn" onclick="openInfoModal()">About NIR8 Calculators</button>
    </footer>
    <script>
        // Global variables
        let currentCalculator = 'formula';
        let stdQty = 0;
        let currentLot = 1;
        let isEditingStdQty = false;
        
        // Initialize the application
        document.addEventListener("DOMContentLoaded", function() {
            // Show the standard quantity modal on load
            document.getElementById('stdQtyModal').style.display = 'flex';
            
            // Set up event listeners
            document.getElementById('stdQtySubmitBtn').addEventListener('click', function() {
                let val = parseFloat(document.getElementById('stdQtyModalInput').value);
                if(!val || val <= 0) { 
                    alert("Please enter a valid standard quantity"); 
                    return; 
                }
                setStdQty(val);
                document.getElementById('stdQtyModal').style.display = 'none';
            });
            
            // Set up lot selection
            document.getElementById('lotSelect').addEventListener('change', function() {
                currentLot = parseInt(this.value);
                highlightActiveLot(currentLot);
                updateQuantityTracker();
            });
            
            // Set up next lot button
            document.getElementById('nextLotBtn').addEventListener('click', function() {
                if(currentLot < 4) {
                    currentLot++;
                    document.getElementById('lotSelect').value = currentLot;
                    highlightActiveLot(currentLot);
                    updateQuantityTracker();
                    this.style.display = 'none';
                } else {
                    alert("All lots completed!");
                }
            });
            
            // Initialize the quantity tracker
            updateQuantityTracker();
        });
        
        // Set standard quantity for all lots
        function setStdQty(val) {
            stdQty = parseFloat(val).toFixed(3);
            
            // Update all A fields
            for(let i = 1; i <= 4; i++) {
                document.getElementById("lot" + i + "-a").value = stdQty;
            }
            
            // Update total A
            document.getElementById("total-a").textContent = (parseFloat(stdQty) * 4).toFixed(3);
            
            // Update the stdQty field in the menu
            document.getElementById("stdQty").value = stdQty;
            
            // Update remaining quantity
            updateQuantityTracker();
        }
        
        // Update the quantity tracker (dispensed and remaining)
        function updateQuantityTracker() {
            const dispensedQty = document.getElementById("dispensedQty");
            const remainingQty = document.getElementById("remainingQty");
            const nextLotBtn = document.getElementById("nextLotBtn");
            
            // Calculate total dispensed
            let totalDispensed = 0;
            for(let i = 1; i <= 4; i++) {
                const bValue = parseFloat(document.getElementById("lot" + i + "-b").value) || 0;
                totalDispensed += bValue;
            }
            
            // Calculate remaining for current lot
            const currentBDispensed = parseFloat(document.getElementById("lot" + currentLot + "-b").value) || 0;
            const currentRemaining = stdQty - currentBDispensed;
            
            // Update display
            dispensedQty.textContent = totalDispensed.toFixed(3);
            remainingQty.textContent = currentRemaining.toFixed(3);
            
            // Show next lot button if current lot is complete
            if(currentRemaining <= 0 && currentLot < 4) {
                nextLotBtn.style.display = 'block';
            } else {
                nextLotBtn.style.display = 'none';
            }
            
            // Update ACB calculations
            updateAcbTotals();
        }
        
        // Highlight the active lot in the table
        function highlightActiveLot(lotNum) {
            // Remove active class from all
            for(let i = 1; i <= 4; i++) {
                document.getElementById("lot" + i + "-a").classList.remove("active-lot");
                document.getElementById("lot" + i + "-b").classList.remove("active-lot");
            }
            
            // Add active class to current lot
            document.getElementById("lot" + lotNum + "-a").classList.add("active-lot");
            document.getElementById("lot" + lotNum + "-b").classList.add("active-lot");
        }
        
        // Update ACB totals
        function updateAcbTotals() {
            // Calculate total B
            let totalB = 0;
            for(let i = 1; i <= 4; i++) {
                const bValue = parseFloat(document.getElementById("lot" + i + "-b").value) || 0;
                totalB += bValue;
                document.getElementById("total-b").textContent = totalB.toFixed(3);
            }
            
            // Calculate (A+C)-B for each lot and total
            let totalC = 0;
            for(let i = 1; i <= 4; i++) {
                const aValue = parseFloat(document.getElementById("lot" + i + "-a").value) || 0;
                const bValue = parseFloat(document.getElementById("lot" + i + "-b").value) || 0;
                const cValue = aValue - bValue;
                document.getElementById("lot" + i + "-c").textContent = cValue.toFixed(3);
                totalC += cValue;
            }
            
            document.getElementById("total-c").textContent = totalC.toFixed(3);
            
            // Update quantity tracker
            updateQuantityTracker();
        }
        
        // Toggle standard quantity editing
        function toggleEdit() {
            isEditingStdQty = !isEditingStdQty;
            const toggleBtn = document.getElementById("toggleEditBtn");
            const notice = document.getElementById("acbNotice");
            
            if(isEditingStdQty) {
                // Enable editing
                for(let i = 1; i <= 4; i++) {
                    document.getElementById("lot" + i + "-a").readOnly = false;
                    document.getElementById("lot" + i + "-a").classList.add("edited");
                }
                toggleBtn.textContent = "Disable Editing Std qty";
                notice.style.display = "block";
            } else {
                // Disable editing
                for(let i = 1; i <= 4; i++) {
                    document.getElementById("lot" + i + "-a").readOnly = true;
                    document.getElementById("lot" + i + "-a").classList.remove("edited");
                }
                toggleBtn.textContent = "Enable Editing Std qty";
                notice.style.display = "none";
            }
        }
        
        // Reset ACB calculator
        function resetAcbCalculator() {
            if(confirm("Are you sure you want to reset all values in the (A+C)-B calculator?")) {
                // Reset all B values
                for(let i = 1; i <= 4; i++) {
                    document.getElementById("lot" + i + "-b").value = "0.000";
                }
                
                // Reset to first lot
                currentLot = 1;
                document.getElementById('lotSelect').value = currentLot;
                highlightActiveLot(currentLot);
                
                // Update totals
                updateAcbTotals();
            }
        }
        
        // Show the selected calculator
        function showCalculator(calculator) {
            // Update menu items
            document.querySelectorAll('.menu-item').forEach(item => {
                item.classList.remove('active');
            });
            
            // Hide all calculators
            document.querySelectorAll('.calculator-container').forEach(calc => {
                calc.classList.remove('active');
            });
            
            // Show selected calculator
            if(calculator === 'formula') {
                document.getElementById('menuFormula').classList.add('active');
                document.getElementById('formulaCalculator').classList.add('active');
                document.getElementById('lotSelectGroup').style.display = 'none';
                currentCalculator = 'formula';
            } else {
                document.getElementById('menuAcb').classList.add('active');
                document.getElementById('acbCalculator').classList.add('active');
                document.getElementById('lotSelectGroup').style.display = 'flex';
                currentCalculator = 'acb';
            }
        }
        
        // Open info modal
        function openInfoModal() {
            document.getElementById('infoModal').style.display = 'block';
        }
        
        // Close info modal
        function closeInfoModal() {
            document.getElementById('infoModal').style.display = 'none';
        }
    </script>
</body>
</html>